<!DOCTYPE html >
    <html>

    <head>
    <link rel="stylesheet" href = "https://fonts.googleapis.com/css?family=Orbitron" >
        <link rel="stylesheet" href = "https://fonts.googleapis.com/css?family=Nanum+Pen+Script" >
            <title>FCC: Javascript Calculator < /title>
                < script src = "https://cdnjs.cloudflare.com/ajax/libs/react/17.0.2/umd/react.production.min.js"
integrity = "sha512-qlzIeUtTg7eBpmEaS12NZgxz52YYZVF5myj89mjJEesBd/oE9UPsYOX2QAXzvOAZYEvQohKdcY8zKE02ifXDmA=="
crossorigin = "anonymous" referrerpolicy = "no-referrer" > </script>
    < script src = "https://cdnjs.cloudflare.com/ajax/libs/react-dom/17.0.2/umd/react-dom.production.min.js"
integrity = "sha512-9jGNr5Piwe8nzLLYTk8QrEMPfjGU0px80GYzKZUxi7lmCfrBjtyCc1V5kkS5vxVwwIB7Qpzc7UxLiQxfAN30dw=="
crossorigin = "anonymous" referrerpolicy = "no-referrer" > </script>
    < /head>

    < body >
    <style>
    html,
    body {
    background - color: rgb(171, 144, 167);
    font - family: 'Orbitron', 'Courier New', Courier, monospace;
    height: 100 %;
    width: 100 %;
    margin: 0;
    padding: 0;
    display: table;
}

#calculator {
    height: 100vh;
    display: flex;
    justify - content: center;
    align - items: center;
}

#calcdiv {
    background - color: black;
    width: 50 %;
    min - height: 50 %;
    border: 0.1em solid grey;
    padding: 0.1em;
    display: flex;
    flex - direction: column;
    max - width: 30 %;
    min - width: 30 %;
}

#screen {
    flex: 1 1 0;
    padding: 0.1em;
    display: flex;
    flex - direction: column;
    align - items: flex - end;
    justify - content: end;
}

#display {
    color: #fff;
    text - align: right;
    font - size: large;
    /* word-wrap: break-word; */
    word -break: break-all;
}

#expression {
    color: orange;
    font - size: medium;
    text - align: right;
    /* word-wrap: break-word; */
    word -break: break-all;
}

#button - area {
    flex: 4 1 0;
    display: grid;
    grid - template - rows: repeat(5, 1fr);
    margin: 0.1em;
}

        .buttons {
    margin: 0.1em;
    display: flex;
    align - items: center;
    justify - content: center;
    color: #fff;
}

        .buttons:hover {
    color: #000;
    border: 1px solid white;
}

#clear {
    grid - column: 1 / 3;
    background - color: rgb(194, 85, 68);
}

#divide {
    grid - column: 3 / 4;
    background - color: gray;
}

#multiply {
    grid - column: 4 / 5;
    background - color: gray;
}

#one,
    #four,
    #seven {
    grid - column: 1 / 2;
    background - color: rgb(82, 78, 78);
}

#two,
    #five,
    #eight {
    grid - column: 2 / 3;
    background - color: rgb(82, 78, 78);
}

#three,
    #six,
    #nine {
    grid - column: 3 / 4;
    background - color: rgb(82, 78, 78);
}

#add,
    #subtract {
    grid - column: 4 / 5;
    background - color: gray;
}

#decimal {
    grid - column: 3 / 4;
    background - color: rgb(159, 48, 48);
}

#equals {
    grid - row: 4 / 6;
    grid - column: 4;
    background - color: rgb(72, 139, 139);
}

#zero {
    grid - column: 1 / 3;
    background - color: rgb(82, 78, 78);

}

footer,
    a {
    text - align: right;
    margin - top: -30px;
    color: rgb(247, 238, 223);
    font - size: large;
    text - decoration: none;
    font - family: 'Nanum Pen Script', 'Courier New', Courier, monospace;
    margin - right: 5px;
}

        footer a:hover {
    color: pink;
    text - decoration: underline;
}
</style>
    < div id = "calculator" >

        </div>
        < footer >
        <a href="https://www.freecodecamp.org/fcc4c0f1f3d-90fc-4156-9b7a-b404d3fbad60" > Author: Sara Markic < /a></p >
            </footer>

            < script type = "text/javascript" >

        const e = React.createElement;

const Screen = ({ value, expression, lastAction }) => {
    return e('div', { id: 'screen' }, [
        e('div', { id: 'expression' }, expression),
        e('div', { id: 'display' }, value)]);
}

const CalcButton = ({ id, text, onPress }) => {
    return e('div', { className: 'buttons', id, onClick: () => onPress({ id, text }) }, text);
}

const ButtonArea = ({ onPress }) => {
    const buttons = [
        { id: 'clear', text: 'AC' },
        { id: "divide", text: '/' },
        { id: "multiply", text: '*' },
        { id: "one", text: '1' },
        { id: "two", text: '2' },
        { id: "three", text: '3' },
        { id: "add", text: '+' },
        { id: "four", text: '4' },
        { id: "five", text: '5' },
        { id: "six", text: '6' },
        { id: "subtract", text: '-' },
        { id: "seven", text: '7' },
        { id: "eight", text: '8' },
        { id: "nine", text: '9' },
        { id: "equals", text: '=' },
        { id: "zero", text: '0' },
        { id: "decimal", text: '.' },
    ];

    return e('div', { id: 'button-area' }, buttons.map((opts) => e(CalcButton, { ...opts, onPress })));
}

const Calculator = ({ }) => {
    const [value, setValue] = React.useState('0');
    const [lastAction, setLastAction] = React.useState('');
    const [expression, setExpression] = React.useState('');

    const onPress = ({ id, text }) => {
        switch (id) {
            case 'clear':
                setExpression('');
                setValue('0');
                break;

            case 'equals':
                const result = eval(expression);
                setValue(String(result));
                break;

            case 'zero':
                if (expression[expression.length - 1] !== '0' || '0123456789.'.indexOf(expression[expression.length - 2]) !== -1) {
                    setExpression(expression => expression + text);
                }
                break;

            default:
                setExpression(expression => expression + text);
                break;
        }
    }

    return e('div', { id: 'calcdiv' }, [
        e(Screen, { value, expression }), e(ButtonArea, { onPress })
    ]);
}

const root = document.getElementById('calculator');
ReactDOM.render(e(Calculator, {}, null), root);

</script>
    < /body>

    < /html>